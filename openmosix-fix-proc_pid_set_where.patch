Index: linux/hpc/proc.c
===================================================================
--- linux.orig/hpc/proc.c	2006-11-02 22:51:59.000000000 +0100
+++ linux/hpc/proc.c	2006-11-02 22:52:17.000000000 +0100
@@ -47,6 +47,12 @@
 	struct kcom_node *node;
 	/* task_t *kcomd_task;*/
 
+
+	if (!dest_ptr) {
+	    printk(KERN_ERR "openmosix: openmosix internal structure is not initialized for pid %d\n", p->pid);
+	    return -EFAULT;
+	}
+
 	buf[size-1]='\0';	 /* ensures no trailing crap in 'where' file*/
 
 	if (size >= 4 && strnicmp(buf, "home", 4) == 0) {
Index: linux/hpc/task.c
===================================================================
--- linux.orig/hpc/task.c	2006-11-02 22:51:59.000000000 +0100
+++ linux/hpc/task.c	2006-11-02 22:52:17.000000000 +0100
@@ -155,6 +155,12 @@
 	task_t *parent = current;
 
 	memset(&p->om, 0, sizeof(om_task_t));
+	p->om.whereto = kmalloc(sizeof(struct sockaddr), GFP_KERNEL);
+
+	if (!p->om.whereto) {
+		printk(KERN_ERR "OM: Can't allocate the whereto sockaddr structure for pid %d\n", p->pid);
+		return -EFAULT;
+	}
 
 	if (p->pid == 1)
 		task_set_stay(p, DSTAY_SYSTEM);
